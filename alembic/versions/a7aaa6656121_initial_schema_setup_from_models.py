"""Initial schema setup from models

Revision ID: a7aaa6656121
Revises: 
Create Date: 2025-06-08 07:55:49.739018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a7aaa6656121'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_companies_public_keycloak_group_id'), table_name='companies', schema='tenants_schema')
    op.drop_index(op.f('ix_companies_public_name'), table_name='companies', schema='tenants_schema')
    op.drop_index(op.f('ix_companies_public_status'), table_name='companies', schema='tenants_schema')
    op.drop_table('companies', schema='tenants_schema')
    op.alter_column('tickets', 'tenant_id',
               existing_type=sa.UUID(),
               nullable=False,
               schema='tickets_schema')
    op.create_index(op.f('ix_tickets_schema_tickets_tenant_id'), 'tickets', ['tenant_id'], unique=False, schema='tickets_schema')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tickets_schema_tickets_tenant_id'), table_name='tickets', schema='tickets_schema')
    op.alter_column('tickets', 'tenant_id',
               existing_type=sa.UUID(),
               nullable=True,
               schema='tickets_schema')
    op.create_table('companies',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False, comment="Yerel veritabanındaki şirket (tenant) ID'si"),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='Şirketin (tenant) adı'),
    sa.Column('keycloak_group_id', sa.UUID(), autoincrement=False, nullable=False, comment="Bu şirketi temsil eden Keycloak grubunun ID'si"),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=False, comment='Tenant durumu (örn: active, inactive, suspended)'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('companies_pkey')),
    sa.UniqueConstraint('keycloak_group_id', name=op.f('companies_keycloak_group_id_key')),
    sa.UniqueConstraint('name', name=op.f('companies_name_key')),
    schema='tenants_schema'
    )
    op.create_index(op.f('ix_companies_public_status'), 'companies', ['status'], unique=False, schema='tenants_schema')
    op.create_index(op.f('ix_companies_public_name'), 'companies', ['name'], unique=False, schema='tenants_schema')
    op.create_index(op.f('ix_companies_public_keycloak_group_id'), 'companies', ['keycloak_group_id'], unique=False, schema='tenants_schema')
    # ### end Alembic commands ###
