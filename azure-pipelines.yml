trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'user_service/*'

pool:
  # Deployment'taki havuz adıyla eşleşmeli
  name: 'Default' 

variables:
  # Değişkenleri burada merkezi olarak tanımlıyoruz
  serviceName: 'user-service'
  harborRepo: 'harbor.cloudpro.com.tr/helpdesk/$(serviceName)'
  imageTag: '$(Build.BuildId)'
  buildContext: '$(Build.SourcesDirectory)/$(serviceName)'
  dockerfilePath: '$(Build.SourcesDirectory)/$(serviceName)/Dockerfile'

stages:
- stage: BuildWithKaniko
  displayName: 'Build and Push with Kaniko'
  jobs:
  - job: KanikoJob
    displayName: 'Build Image for $(serviceName)'
    steps:
    # kubectl görevi, cluster'daki ajanı kullandığımız için çalışacaktır.
    - task: Kubernetes@1
      displayName: 'Build and Push Image using Kaniko Pod'
      inputs:
        connectionType: 'Kubernetes Service Connection'
        # Azure DevOps'ta RKE2 cluster'ın için oluşturduğun Service Connection'ın adı
        kubernetesServiceEndpoint: 'RKE2ClusterConnection' 
        namespace: 'ado-agents' # Kaniko pod'unun oluşturulacağı namespace
        command: 'apply'
        useConfigMapForTriggers: false
        # Kaniko pod'unu anında oluşturmak için inline YAML kullanıyoruz
        arguments: |
          -f - <<EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: kaniko-build-pod-$(Build.BuildId)
          spec:
            containers:
            - name: kaniko
              image: gcr.io/kaniko-project/executor:latest
              args:
                - "--context=$(buildContext)"
                - "--dockerfile=$(dockerfilePath)"
                - "--destination=$(harborRepo):$(imageTag)"
                - "--registry-mirror=harbor.cloudpro.com.tr" # Güvenlik duvarı varsa gerekebilir
              volumeMounts:
              - name: harbor-credentials-volume
                mountPath: /kaniko/.docker/
            restartPolicy: Never
            volumes:
            - name: harbor-credentials-volume
              secret:
                secretName: harbor-credentials # Adım 2'de oluşturduğumuz secret
                items:
                  - key: .dockerconfigjson
                    path: config.json
          EOF