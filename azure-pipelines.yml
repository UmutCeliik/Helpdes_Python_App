trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'user_service/*'

pool:
  name: 'Default'

variables:
  serviceName: 'user-service'
  harborRepo: 'harbor.cloudpro.com.tr/helpdesk/$(serviceName)'
  imageTag: '$(Build.BuildId)'
  buildContext: '$(Build.SourcesDirectory)'
  dockerfilePath: '$(Build.SourcesDirectory)/$(serviceName)/Dockerfile'
  namespace: 'ado-agents'
  # Yeni eklenen değişken: Her build için benzersiz pod adı
  podName: 'kaniko-build-pod-$(imageTag)'

stages:
- stage: BuildWithKaniko
  displayName: 'Build and Push with Kaniko'
  jobs:
  - job: KanikoJob
    displayName: 'Build Image for $(serviceName)'
    steps:
    - task: Kubernetes@1
      displayName: 'Create Kaniko Pod from file'
      inputs:
        # Service Connection'a artık gerek yok, ajan kendi kimliğini kullanıyor.
        connectionType: 'None'
        namespace: '$(namespace)'
        command: 'apply'
        # Pod şablon dosyamızı kullanıyoruz
        arguments: '-f $(Build.SourcesDirectory)/kaniko-pod.yaml'

    - task: Kubernetes@1
      displayName: 'Run Build by Patching Kaniko Pod'
      inputs:
        connectionType: 'None'
        namespace: '$(namespace)'
        command: 'patch'
        # 'patch' komutu, mevcut bir kaynağı güncellemek için kullanılır.
        arguments: >-
          pod $(podName) --type='json' 
          -p='[{"op": "replace", "path": "/spec/containers/0/args", "value": [
          "--context=dir://$(buildContext)",
          "--dockerfile=$(dockerfilePath)",
          "--destination=$(harborRepo):$(imageTag)",
          "--destination=$(harborRepo):latest"
          ]}]'
        
    - task: Kubernetes@1
      displayName: 'Wait for Kaniko Pod to Complete'
      inputs:
        connectionType: 'None'
        namespace: '$(namespace)'
        command: 'wait'
        arguments: 'pod/$(podName) --for=condition=Ready --timeout=10m'
        
    - task: Kubernetes@1
      displayName: 'Get Kaniko Pod Logs'
      inputs:
        connectionType: 'None'
        namespace: '$(namespace)'
        command: 'logs'
        arguments: '$(podName)'

    - task: Kubernetes@1
      displayName: 'Delete Kaniko Pod'
      inputs:
        connectionType: 'None'
        namespace: '$(namespace)'
        command: 'delete'
        arguments: 'pod $(podName)'