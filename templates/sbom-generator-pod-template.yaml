# templates/sbom-generator-pod-template.yaml (NİHAİ - Sidecar Modeli)
apiVersion: v1
kind: Pod
metadata:
  name: __POD_NAME__
  namespace: ado-agents
  labels:
    app: sbom-generator
spec:
  restartPolicy: Never
  serviceAccountName: ado-agent-sa
  
  # YETKİ SORUNUNU ÇÖZMEK İÇİN fsGroup'u GERİ GETİRİYORUZ.
  # Bu, root olmayan 'generator' konteynerinin, root olan 'initContainer'
  # tarafından oluşturulan klasöre yazabilmesini sağlar.
  securityContext:
    fsGroup: 1001

  # 1. Init Container: Sadece kaynak kodu klonlar.
  initContainers:
  - name: git-cloner
    image: alpine/git:latest
    command: ["/bin/sh", "-c"]
    args:
    - |
      set -ex
      GIT_REPO_URL_WITH_TOKEN=$(echo "__GIT_REPO_URL__" | sed "s,https://,https://__AZP_TOKEN__@,")
      echo "Cloning repository into /workspace/source..."
      git clone "$GIT_REPO_URL_WITH_TOKEN" /workspace/source
      echo "Source code cloned successfully."
    env:
    - name: GIT_REPO_URL
      value: __GIT_REPO_URL__
    - name: AZP_TOKEN
      value: __AZP_TOKEN__
    volumeMounts:
    - name: work-volume
      mountPath: /workspace

  # 2. Ana Konteynerler: Biri SBOM oluşturur, diğeri yükler.
  containers:
  # Konteyner 1: SADECE SBOM OLUŞTURUR
  - name: generator
    image: cyclonedx/cyclonedx-python:latest # Official imajı kullanıyoruz
    workingDir: /workspace/source/__CONTEXT_SUB_PATH_RELATIVE__/
    command: ["/bin/bash", "-c"]
    args:
    - |
      set -ex
      echo ">>> Generating SBOM file..."
      # Komutun en son bulduğumuz doğru hali
      cyclonedx-py requirements requirements.txt -o /workspace/sbom.json

      # Yükleyicinin başlaması için "işlem tamam" dosyası oluştur
      touch /workspace/generator.done
      echo ">>> SBOM generation complete. 'generator.done' flag created."
    volumeMounts:
    - name: work-volume
      mountPath: /workspace

  # Konteyner 2 (Sidecar): SADECE DOSYAYI YÜKLER
  - name: uploader
    image: curlimages/curl:latest # İçinde sadece curl olan hafif bir imaj
    workingDir: /workspace/
    command: ["/bin/sh", "-c"]
    args:
    - |
      set -ex
      echo ">>> Uploader waiting for SBOM file..."
      
      # 'generator.done' dosyası oluşana kadar bekle
      while [ ! -f /workspace/generator.done ]; do
        sleep 2
      done
      
      echo ">>> SBOM file found. Preparing to upload..."
      SBOM_FILE="sbom-$(date +%s)-__SERVICE_NAME__.json"
      mv sbom.json "$SBOM_FILE"

      echo ">>> Uploading $SBOM_FILE to Nexus..."
      # Curl komutu 'v' (verbose) ve 'S' (silent-on-success) flag'leri ile çalıştırılıyor
      # Çıktı, hata ayıklama için tee ile hem konsola hem dosyaya yazdırılıyor
      if ! curl -vS --fail -u "__NEXUS_USERNAME__:__NEXUS_PASSWORD__" \
          --upload-file "$SBOM_FILE" \
          "http://nexus-repository-manager.nexus:8081/repository/sbom-reports/$SBOM_FILE" 2>&1 | tee /workspace/curl_output.log; then
        echo "!!! SBOM UPLOAD FAILED !!!"
        cat /workspace/curl_output.log
        exit 1
      fi

      echo ">>> SBOM upload successful!"
    volumeMounts:
    - name: work-volume
      mountPath: /workspace
      
  # Konteynerlerin paylaştığı disk
  volumes:
  - name: work-volume
    emptyDir: {}