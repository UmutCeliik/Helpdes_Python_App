# templates/sbom-generator-pod-template.yaml (GÜNCELLENMİŞ - Resmi cyclonedx/cyclonedx-python İmajı ile)
# Bu şablon, Python projeleri için özel olarak geliştirilmiş resmi Docker imajını kullanır.
# Bu yaklaşım, özel imaj oluşturma ve bakım sorunlarını ortadan kaldırarak en stabil çözümü sunar.
apiVersion: v1
kind: Pod
metadata:
  name: __POD_NAME__
  namespace: ado-agents
  labels:
    app: sbom-generator
spec:
  restartPolicy: Never
  serviceAccountName: ado-agent-sa
  initContainers:
  # 1. Init Container: Git deposunu klonlar
  - name: git-cloner
    image: alpine/git:latest
    command: ["/bin/sh", "-c"]
    args:
    - |
      set -ex # Hata durumunda çık ve komutları logla
      # Klonlama işlemi için token'ı URL'ye ekliyoruz.
      GIT_REPO_URL_WITH_TOKEN=$(echo "__GIT_REPO_URL__" | sed "s,https://,https://__AZP_TOKEN__@,")
      echo "Cloning repository from __GIT_REPO_URL__ into /workspace/source..."
      git clone "$GIT_REPO_URL_WITH_TOKEN" /workspace/source
      echo "Source code cloned successfully."
    env:
    - name: GIT_REPO_URL
      value: __GIT_REPO_URL__
    - name: AZP_TOKEN
      value: __AZP_TOKEN__
    volumeMounts:
    - name: work-volume
      mountPath: /workspace

  # 2. Ana Container: SBOM oluşturur ve yükler
  containers:
  - name: generator
    # --- EN ÖNEMLİ DEĞİŞİKLİK ---
    # Özel imaj yerine, CycloneDX projesinin resmi Python imajını kullanıyoruz.
    image: cyclonedx/cyclonedx-python:latest
    # ----------------------------
    # Komutların çalışacağı dizini doğru servis klasörü olarak ayarlıyoruz.
    workingDir: /workspace/source/__CONTEXT_SUB_PATH_RELATIVE__/
    env:
    - name: NEXUS_USERNAME
      value: __NEXUS_USERNAME__
    - name: NEXUS_PASSWORD
      value: __NEXUS_PASSWORD__
    - name: NEXUS_URL
      value: "http://nexus-repository-manager.nexus:8081"
    - name: SERVICE_NAME
      value: __SERVICE_NAME__
    - name: CONTEXT_SUB_PATH_RELATIVE # workingDir'de kullanıldı
      value: __CONTEXT_SUB_PATH_RELATIVE__
    volumeMounts:
    - name: work-volume
      mountPath: /workspace
    command: ["/bin/sh", "-c"]
    args:
    - |
      set -ex # Hata durumunda çık ve komutları logla
      echo "Generating SBOM for $SERVICE_NAME using official cyclonedx/cyclonedx-python image..."

      # Python servisleri için SBOM oluşturma
      if [[ "$SERVICE_NAME" == "user_service" || "$SERVICE_NAME" == "ticket_service" ]]; then
        # --- GÜNCELLENMİŞ KOMUT ---
        # `cyclonedx-py` komutu, bu imajın ana aracıdır.
        # `-r` bayrağı, `requirements.txt` dosyasını okuyup bağımlılıkları analiz etmesini sağlar.
        # `-o` bayrağı ile çıktıyı JSON formatında belirtilen dosyaya yazar.
        cyclonedx-py -r -o sbom.json
        # ------------------------
      elif [[ "$SERVICE_NAME" == "frontend" ]]; then
        echo "Skipping SBOM for frontend service."
        exit 0
      else
        echo "Unknown service type: $SERVICE_NAME. Skipping SBOM generation."
        exit 0
      fi

      # Oluşturulan SBOM'u kontrol et
      if [ ! -s sbom.json ]; then
          echo "ERROR: SBOM generation failed, sbom.json is empty or not created."
          exit 1
      fi
      
      echo "--- Generated SBOM Preview ---"
      head -n 10 sbom.json
      echo "----------------------------"

      # SBOM dosyasını Nexus'a yüklemek için benzersiz bir isimle yeniden adlandır
      SBOM_FILE="sbom-$(date +%s)-$SERVICE_NAME.json"
      mv sbom.json "$SBOM_FILE"

      echo "Uploading SBOM '$SBOM_FILE' to Nexus Raw repository..."
      curl -v -u "$NEXUS_USERNAME:$NEXUS_PASSWORD" \
           --upload-file "$SBOM_FILE" \
           "$NEXUS_URL/repository/sbom-reports/$SBOM_FILE"
      echo "SBOM uploaded to Nexus successfully."
  volumes:
  - name: work-volume
    emptyDir: {}
